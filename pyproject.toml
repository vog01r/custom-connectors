[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "custom-connectors"
version = "1.0.0"
description = "Collection de connecteurs personnalisÃ©s pour Treasure Data"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Treasure Data", email = "engineering@treasuredata.com"}
]
maintainers = [
    {name = "Treasure Data", email = "engineering@treasuredata.com"}
]
keywords = ["treasure-data", "connectors", "etl", "data-pipeline"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: System :: Archiving",
]
requires-python = ">=3.9"
dependencies = [
    "requests>=2.31.0",
    "pytd>=1.4.0",
    "pandas>=2.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "structlog>=23.0.0",
    "tenacity>=8.0.0",
]

[project.optional-dependencies]
dev = [
    # Formatting & Linting
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "flake8-docstrings>=1.7.0",
    "flake8-type-checking>=2.4.0",
    "mypy>=1.5.0",
    "bandit>=1.7.0",
    
    # Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-xdist>=3.3.0",
    "pytest-benchmark>=4.0.0",
    "factory-boy>=3.3.0",
    "httpx>=0.24.0",
    "respx>=0.20.0",
    
    # Development tools
    "pre-commit>=3.3.0",
    "pip-tools>=7.0.0",
    "safety>=2.3.0",
    "pip-audit>=2.6.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocs-gen-files>=0.5.0",
    "mkdocstrings[python]>=0.22.0",
]
monitoring = [
    "prometheus-client>=0.17.0",
    "opentelemetry-api>=1.19.0",
    "opentelemetry-sdk>=1.19.0",
]

[project.urls]
Homepage = "https://github.com/treasure-data/custom-connectors"
Repository = "https://github.com/treasure-data/custom-connectors.git"
Documentation = "https://treasure-data.github.io/custom-connectors/"
Issues = "https://github.com/treasure-data/custom-connectors/issues"
Changelog = "https://github.com/treasure-data/custom-connectors/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["py.typed"]

# === Black Configuration ===
[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# === isort Configuration ===
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]
known_first_party = ["custom_connectors"]

# === mypy Configuration ===
[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_context = true
show_column_numbers = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "pytd.*",
    "pandas.*",
]
ignore_missing_imports = true

# === pytest Configuration ===
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "benchmark: marks tests as benchmarks",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# === Coverage Configuration ===
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/site-packages/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# === Bandit Configuration ===
[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
tests = ["B201", "B301", "B401", "B501", "B601", "B701"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection in tests

# === Ruff Configuration (Alternative to flake8) ===
[tool.ruff]
line-length = 88
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PD",  # pandas-vet
    "PL",  # pylint
    "TRY", # tryceratops
    "NPY", # numpy
    "PERF", # perflint
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",   # line too long, handled by black
    "B008",   # do not perform function calls in argument defaults
    "B904",   # use raise from
    "C901",   # too complex
    "W503",   # line break before binary operator
    "W504",   # line break after binary operator
    "PLR0913", # too many arguments
    "PLR0911", # too many return statements
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "TRY003", # avoid specifying long messages outside exception class
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ARG", "S101", "TRY301", "PLR2004"]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["custom_connectors"]

[tool.ruff.lint.pylint]
max-args = 10

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
